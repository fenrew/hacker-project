{
  "_from": "partial@0.0.6",
  "_id": "partial@0.0.6",
  "_inBundle": false,
  "_integrity": "sha512-51shO7ArkddSgh0FCJ+C0srd1/Dsvg7NeRZAKcBiABd8cPoEUrrpWTgZHq+Ji1y1du2S77JwK9Z3iAKXB7DiDA==",
  "_location": "/partial",
  "_phantomChildren": {},
  "_requested": {
<<<<<<< HEAD
    "escapedName": "partial",
    "fetchSpec": "latest",
    "name": "partial",
    "raw": "partial",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
=======
    "type": "version",
    "registry": true,
    "raw": "partial@0.0.6",
    "name": "partial",
    "escapedName": "partial",
    "rawSpec": "0.0.6",
    "saveSpec": null,
    "fetchSpec": "0.0.6"
>>>>>>> dc432dbe0b93eb3982c35a16db77b71dbbd03fc0
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/partial/-/partial-0.0.6.tgz",
  "_shasum": "6d600e45840aef8ab63cacce86b748d800e33314",
<<<<<<< HEAD
  "_shrinkwrap": null,
  "_spec": "partial",
=======
  "_spec": "partial@0.0.6",
>>>>>>> dc432dbe0b93eb3982c35a16db77b71dbbd03fc0
  "_where": "/Users/tormodflesjo/tormodWork/hacker-project",
  "author": {
    "email": "rook2pawn@gmail.com",
    "name": "David Wee",
    "url": "http://rook2pawn.com"
  },
  "bugs": {
    "url": "https://github.com/rook2pawn/node-partial/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "partial function application - transform f into its partial by partial(f)",
  "devDependencies": {
    "tape": "^4.6.3"
  },
  "homepage": "https://github.com/rook2pawn/node-partial",
  "main": "index.js",
  "name": "partial",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/rook2pawn/node-partial.svg?branch=master)](https://travis-ci.org/rook2pawn/node-partial)\n\npartial\n=======\n\nis simple to use\n\n\tvar partial = require('partial');\n\tvar foo = function(x,y,z) { return (x*y) + z }\n\t\n\tvar bar = partial(foo);\n\nand we're done! Now we can simply say\n\n\tbar(2,3)(4); // 10\n\tbar(2)(3,4); // 10\n\t\n\tvar fix = bar(2,3); \n\tfix(4); // 10\n\t\n\nusage\n-----\nSimply pass any function to partial, and if you wish, any arguments you want to fix.\n\n\tvar bar = partial(foo);\n\tvar baz = bar(2,3);\n\nis identical to\n\n\tvar baz2 = partial(foo,2,3);\n\t\n\nboth can be used like so:\n\n\tbaz(4); // 10\n\tbaz2(4); // 10\n\nRight side partial function application is through .rapply i.e.\n\n\tvar bar = partial.rapply(foo);\n\tvar baz = bar(3,7); // y = 3, z = 7\n\t\n\tbaz(2); // (2*3) + 7 = 13\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/rook2pawn/node-partial.git"
  },
  "scripts": {
    "test": "tape test/test*.js"
  },
  "version": "0.0.6"
}
